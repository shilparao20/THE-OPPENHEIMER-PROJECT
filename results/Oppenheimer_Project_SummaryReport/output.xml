<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.9.10 on darwin)" generated="20220310 17:24:16.868" rpa="false" schemaversion="2">
<suite id="s1" name="Oppenheimer_Project_SummaryReport" source="/Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/tests">
<suite id="s1-s1" name="userStory1" source="/Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/tests/userStory1.robot">
<kw name="Open Browser To launch app" library="keywords" type="SETUP">
<doc>Create a webdriver
Then navigate to the application URL
Verify if the title matches the desired login page title</doc>
<kw name="Log" library="BuiltIn">
<arg>${EXECUTABLE_PATH}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220310 17:24:17.093" level="INFO">webDrivers/chromedriver</msg>
<status status="PASS" starttime="20220310 17:24:17.093" endtime="20220310 17:24:17.093"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>${BROWSER}</arg>
<arg>executable_path=${EXECUTABLE_PATH}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20220310 17:24:17.093" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20220310 17:24:17.093" endtime="20220310 17:24:18.963"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20220310 17:24:18.965" level="INFO">Opening url 'http://localhost:8080'</msg>
<status status="PASS" starttime="20220310 17:24:18.964" endtime="20220310 17:24:19.749"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>${LOGIN_PAGE_TITLE}</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20220310 17:24:19.755" level="INFO">Page title is 'Technical Challenge for CDS'.</msg>
<status status="PASS" starttime="20220310 17:24:19.749" endtime="20220310 17:24:19.755"/>
</kw>
<status status="PASS" starttime="20220310 17:24:17.092" endtime="20220310 17:24:19.755"/>
</kw>
<test id="s1-s1-t1" name="AC1:Validate inserting single record using API">
<kw name="Insert a working class hero record via API" library="keywords">
<doc>Calls the function to read JSON file and returns request body
Execute the POST request to insert single record
Verify the status code returned</doc>
<kw name="Read JSON File and return request body" library="keywords">
<var>${req_body}</var>
<arg>${INPUT_FILES_PATH}/userStory1.json</arg>
<doc>Takes a file as input
Read the file content and converts to JSON</doc>
<kw name="Get File" library="OperatingSystem">
<var>${json}</var>
<arg>${INPUT_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220310 17:24:19.758" level="INFO" html="true">Getting file '&lt;a href="file:///Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/inputs/userStory1.json"&gt;/Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/inputs/userStory1.json&lt;/a&gt;'.</msg>
<msg timestamp="20220310 17:24:19.759" level="INFO">${json} = {
    "birthday": "08121991", 
    "gender": "F", 
    "name": "Madhu", 
    "natid": "S1325901H", 
    "salary": "9000", 
    "tax": "850"
}</msg>
<status status="PASS" starttime="20220310 17:24:19.757" endtime="20220310 17:24:19.759"/>
</kw>
<kw name="Convert String to JSON" library="keywords">
<var>${req_body}</var>
<arg>${json}</arg>
<doc>This keyword is used to convert any string to JSON</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${headers}</var>
<arg>json.loads("""${object}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220310 17:24:19.759" level="INFO">${headers} = {'birthday': '08121991', 'gender': 'F', 'name': 'Madhu', 'natid': 'S1325901H', 'salary': '9000', 'tax': '850'}</msg>
<status status="PASS" starttime="20220310 17:24:19.759" endtime="20220310 17:24:19.760"/>
</kw>
<msg timestamp="20220310 17:24:19.760" level="INFO">${req_body} = {'birthday': '08121991', 'gender': 'F', 'name': 'Madhu', 'natid': 'S1325901H', 'salary': '9000', 'tax': '850'}</msg>
<status status="PASS" starttime="20220310 17:24:19.759" endtime="20220310 17:24:19.760"/>
</kw>
<msg timestamp="20220310 17:24:19.760" level="INFO">${req_body} = {'birthday': '08121991', 'gender': 'F', 'name': 'Madhu', 'natid': 'S1325901H', 'salary': '9000', 'tax': '850'}</msg>
<status status="PASS" starttime="20220310 17:24:19.757" endtime="20220310 17:24:19.760"/>
</kw>
<kw name="Convert String to JSON" library="keywords">
<var>${headers}</var>
<arg>${HEADERS}</arg>
<doc>This keyword is used to convert any string to JSON</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${headers}</var>
<arg>json.loads("""${object}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220310 17:24:19.761" level="INFO">${headers} = {'Content-Type': 'application/json', 'accept': '*/*'}</msg>
<status status="PASS" starttime="20220310 17:24:19.761" endtime="20220310 17:24:19.761"/>
</kw>
<msg timestamp="20220310 17:24:19.761" level="INFO">${headers} = {'Content-Type': 'application/json', 'accept': '*/*'}</msg>
<status status="PASS" starttime="20220310 17:24:19.760" endtime="20220310 17:24:19.761"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/calculator/insert</arg>
<arg>json=${req_body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=202</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220310 17:24:19.775" level="INFO">POST Request : url=http://localhost:8080/calculator/insert 
 path_url=/calculator/insert 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '110'} 
 body=b'{"birthday": "08121991", "gender": "F", "name": "Madhu", "natid": "S1325901H", "salary": "9000", "tax": "850"}' 
 </msg>
<msg timestamp="20220310 17:24:19.775" level="INFO">POST Response : url=http://localhost:8080/calculator/insert 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 10 Mar 2022 09:24:19 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220310 17:24:19.775" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220310 17:24:19.761" endtime="20220310 17:24:19.775"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>202</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220310 17:24:19.775" endtime="20220310 17:24:19.776"/>
</kw>
<status status="PASS" starttime="20220310 17:24:19.756" endtime="20220310 17:24:19.776"/>
</kw>
<doc>Single record of a working class hero should consist of Natural Id (natid), Name, Gender, Birthday, Salary and Tax paid</doc>
<tag>Functional Test</tag>
<status status="PASS" starttime="20220310 17:24:19.755" endtime="20220310 17:24:19.776"/>
</test>
<kw name="Close Browser session" library="keywords" type="TEARDOWN">
<doc>Used to close the browser</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220310 17:24:19.777" endtime="20220310 17:24:19.851"/>
</kw>
<status status="PASS" starttime="20220310 17:24:19.777" endtime="20220310 17:24:19.851"/>
</kw>
<doc>As the Clerk, I should be able to insert a single record of working class hero into database via an API.

Keywords are imported from the resource file</doc>
<status status="PASS" starttime="20220310 17:24:16.890" endtime="20220310 17:24:19.851"/>
</suite>
<suite id="s1-s2" name="userStory2" source="/Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/tests/userStory2.robot">
<test id="s1-s2-t1" name="AC1:Validate inserting multiple records via API">
<kw name="Insert multiple working class hero records via API" library="keywords">
<doc>Calls the function to read JSON file and returns request body
Execute the POST request to insert multiple records
Verify the status code returned</doc>
<kw name="Read JSON File and return request body" library="keywords">
<var>${req_body}</var>
<arg>${INPUT_FILES_PATH}/userStory2.json</arg>
<doc>Takes a file as input
Read the file content and converts to JSON</doc>
<kw name="Get File" library="OperatingSystem">
<var>${json}</var>
<arg>${INPUT_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220310 17:24:19.863" level="INFO" html="true">Getting file '&lt;a href="file:///Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/inputs/userStory2.json"&gt;/Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/inputs/userStory2.json&lt;/a&gt;'.</msg>
<msg timestamp="20220310 17:24:19.863" level="INFO">${json} = [
    {
      "birthday": "06041994",
      "gender": "M",
      "name": "Shashank",
      "natid": "S1325801H",
      "salary": "10000",
      "tax": "750"
    },
    {
        "birthday": "05101985"...</msg>
<status status="PASS" starttime="20220310 17:24:19.862" endtime="20220310 17:24:19.863"/>
</kw>
<kw name="Convert String to JSON" library="keywords">
<var>${req_body}</var>
<arg>${json}</arg>
<doc>This keyword is used to convert any string to JSON</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${headers}</var>
<arg>json.loads("""${object}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220310 17:24:19.864" level="INFO">${headers} = [{'birthday': '06041994', 'gender': 'M', 'name': 'Shashank', 'natid': 'S1325801H', 'salary': '10000', 'tax': '750'}, {'birthday': '05101985', 'gender': 'M', 'name': 'Sumanth', 'natid': 'S1325701H', 's...</msg>
<status status="PASS" starttime="20220310 17:24:19.863" endtime="20220310 17:24:19.864"/>
</kw>
<msg timestamp="20220310 17:24:19.864" level="INFO">${req_body} = [{'birthday': '06041994', 'gender': 'M', 'name': 'Shashank', 'natid': 'S1325801H', 'salary': '10000', 'tax': '750'}, {'birthday': '05101985', 'gender': 'M', 'name': 'Sumanth', 'natid': 'S1325701H', 's...</msg>
<status status="PASS" starttime="20220310 17:24:19.863" endtime="20220310 17:24:19.864"/>
</kw>
<msg timestamp="20220310 17:24:19.865" level="INFO">${req_body} = [{'birthday': '06041994', 'gender': 'M', 'name': 'Shashank', 'natid': 'S1325801H', 'salary': '10000', 'tax': '750'}, {'birthday': '05101985', 'gender': 'M', 'name': 'Sumanth', 'natid': 'S1325701H', 's...</msg>
<status status="PASS" starttime="20220310 17:24:19.862" endtime="20220310 17:24:19.865"/>
</kw>
<kw name="Convert String to JSON" library="keywords">
<var>${headers}</var>
<arg>${headers}</arg>
<doc>This keyword is used to convert any string to JSON</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${headers}</var>
<arg>json.loads("""${object}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220310 17:24:19.866" level="INFO">${headers} = {'Content-Type': 'application/json', 'accept': '*/*'}</msg>
<status status="PASS" starttime="20220310 17:24:19.865" endtime="20220310 17:24:19.866"/>
</kw>
<msg timestamp="20220310 17:24:19.866" level="INFO">${headers} = {'Content-Type': 'application/json', 'accept': '*/*'}</msg>
<status status="PASS" starttime="20220310 17:24:19.865" endtime="20220310 17:24:19.866"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/calculator/insertMultiple</arg>
<arg>json=${req_body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=202</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220310 17:24:19.876" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '231'} 
 body=b'[{"birthday": "06041994", "gender": "M", "name": "Shashank", "natid": "S1325801H", "salary": "10000", "tax": "750"}, {"birthday": "05101985", "gender": "M", "name": "Sumanth", "natid": "S1325701H", "salary": "10000", "tax": "750"}]' 
 </msg>
<msg timestamp="20220310 17:24:19.876" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 10 Mar 2022 09:24:19 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220310 17:24:19.877" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220310 17:24:19.866" endtime="20220310 17:24:19.877"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>202</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220310 17:24:19.877" endtime="20220310 17:24:19.877"/>
</kw>
<status status="PASS" starttime="20220310 17:24:19.862" endtime="20220310 17:24:19.877"/>
</kw>
<doc>Enhancement of test case (1), with the ability to insert a list</doc>
<tag>Functional Test</tag>
<status status="PASS" starttime="20220310 17:24:19.861" endtime="20220310 17:24:19.877"/>
</test>
<doc>As the Clerk, I should be able to insert more than one working class hero into database via an API.

Keywords are imported from the resource file</doc>
<status status="PASS" starttime="20220310 17:24:19.853" endtime="20220310 17:24:19.878"/>
</suite>
<suite id="s1-s3" name="userStory3" source="/Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/tests/userStory3.robot">
<kw name="Open Browser To launch app" library="keywords" type="SETUP">
<doc>Create a webdriver
Then navigate to the application URL
Verify if the title matches the desired login page title</doc>
<kw name="Log" library="BuiltIn">
<arg>${EXECUTABLE_PATH}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220310 17:24:19.887" level="INFO">webDrivers/chromedriver</msg>
<status status="PASS" starttime="20220310 17:24:19.887" endtime="20220310 17:24:19.887"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>${BROWSER}</arg>
<arg>executable_path=${EXECUTABLE_PATH}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20220310 17:24:19.888" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20220310 17:24:19.888" endtime="20220310 17:24:21.657"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20220310 17:24:21.658" level="INFO">Opening url 'http://localhost:8080'</msg>
<status status="PASS" starttime="20220310 17:24:21.658" endtime="20220310 17:24:22.527"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>${LOGIN_PAGE_TITLE}</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20220310 17:24:22.536" level="INFO">Page title is 'Technical Challenge for CDS'.</msg>
<status status="PASS" starttime="20220310 17:24:22.528" endtime="20220310 17:24:22.536"/>
</kw>
<status status="PASS" starttime="20220310 17:24:19.887" endtime="20220310 17:24:22.536"/>
</kw>
<test id="s1-s3-t1" name="AC1:Verify first row of csv contains mandatory headers">
<kw name="Read CSV File" library="keywords">
<var>@{read_csv}</var>
<doc>Takes input CSV file and reads the contents into a list
Returns the CSV data in the form of list for further computation</doc>
<kw name="Get File" library="OperatingSystem">
<var>${csv}</var>
<arg>${INPUT_FILES_PATH}/Input_Data.csv</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220310 17:24:22.538" level="INFO" html="true">Getting file '&lt;a href="file:///Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/inputs/Input_Data.csv"&gt;/Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/inputs/Input_Data.csv&lt;/a&gt;'.</msg>
<msg timestamp="20220310 17:24:22.539" level="INFO">${csv} = natid,name,gender,salary,birthday,tax
S1325702H,Sumanth,M,10000,05101985,900
</msg>
<status status="PASS" starttime="20220310 17:24:22.538" endtime="20220310 17:24:22.539"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{read}</var>
<arg>${csv}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220310 17:24:22.539" level="INFO">@{read} = [ natid,name,gender,salary,birthday,tax
S1325702H,Sumanth,M,10000,05101985,900
 ]</msg>
<status status="PASS" starttime="20220310 17:24:22.539" endtime="20220310 17:24:22.539"/>
</kw>
<msg timestamp="20220310 17:24:22.539" level="INFO">@{read_csv} = [ natid,name,gender,salary,birthday,tax
S1325702H,Sumanth,M,10000,05101985,900
 ]</msg>
<status status="PASS" starttime="20220310 17:24:22.537" endtime="20220310 17:24:22.539"/>
</kw>
<kw name="Retrieve the first row from CSV" library="keywords">
<var>${actual_csv_header}</var>
<arg>@{read_csv}</arg>
<doc>Reads the CSV content from a list
Returns the CSV header</doc>
<kw name="Split To Lines" library="String">
<var>@{lines}</var>
<arg>@{read}</arg>
<arg>0</arg>
<arg>-1</arg>
<doc>Splits the given string to lines.</doc>
<msg timestamp="20220310 17:24:22.541" level="INFO">1 lines returned</msg>
<msg timestamp="20220310 17:24:22.541" level="INFO">@{lines} = [ natid,name,gender,salary,birthday,tax ]</msg>
<status status="PASS" starttime="20220310 17:24:22.540" endtime="20220310 17:24:22.541"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${actual_csv_header}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220310 17:24:22.541" level="INFO">${actual_csv_header} = []</msg>
<status status="PASS" starttime="20220310 17:24:22.541" endtime="20220310 17:24:22.541"/>
</kw>
<kw name="Split String" library="String">
<var>@{csv_header}</var>
<arg>${lines}[0]</arg>
<arg>,</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20220310 17:24:22.542" level="INFO">@{csv_header} = [ natid | name | gender | salary | birthday | tax ]</msg>
<status status="PASS" starttime="20220310 17:24:22.541" endtime="20220310 17:24:22.542"/>
</kw>
<for flavor="IN">
<var>${header}</var>
<value>@{csv_header}</value>
<iter>
<var name="${header}">natid</var>
<kw name="Append To List" library="Collections">
<arg>${actual_csv_header}</arg>
<arg>${header}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220310 17:24:22.544" endtime="20220310 17:24:22.544"/>
</kw>
<status status="PASS" starttime="20220310 17:24:22.542" endtime="20220310 17:24:22.544"/>
</iter>
<iter>
<var name="${header}">name</var>
<kw name="Append To List" library="Collections">
<arg>${actual_csv_header}</arg>
<arg>${header}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220310 17:24:22.544" endtime="20220310 17:24:22.545"/>
</kw>
<status status="PASS" starttime="20220310 17:24:22.544" endtime="20220310 17:24:22.545"/>
</iter>
<iter>
<var name="${header}">gender</var>
<kw name="Append To List" library="Collections">
<arg>${actual_csv_header}</arg>
<arg>${header}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220310 17:24:22.545" endtime="20220310 17:24:22.545"/>
</kw>
<status status="PASS" starttime="20220310 17:24:22.545" endtime="20220310 17:24:22.545"/>
</iter>
<iter>
<var name="${header}">salary</var>
<kw name="Append To List" library="Collections">
<arg>${actual_csv_header}</arg>
<arg>${header}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220310 17:24:22.545" endtime="20220310 17:24:22.545"/>
</kw>
<status status="PASS" starttime="20220310 17:24:22.545" endtime="20220310 17:24:22.545"/>
</iter>
<iter>
<var name="${header}">birthday</var>
<kw name="Append To List" library="Collections">
<arg>${actual_csv_header}</arg>
<arg>${header}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220310 17:24:22.545" endtime="20220310 17:24:22.546"/>
</kw>
<status status="PASS" starttime="20220310 17:24:22.545" endtime="20220310 17:24:22.546"/>
</iter>
<iter>
<var name="${header}">tax</var>
<kw name="Append To List" library="Collections">
<arg>${actual_csv_header}</arg>
<arg>${header}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20220310 17:24:22.546" endtime="20220310 17:24:22.546"/>
</kw>
<status status="PASS" starttime="20220310 17:24:22.546" endtime="20220310 17:24:22.546"/>
</iter>
<status status="PASS" starttime="20220310 17:24:22.542" endtime="20220310 17:24:22.546"/>
</for>
<kw name="Log" library="BuiltIn">
<arg>${actual_csv_header}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220310 17:24:22.547" level="INFO">['natid', 'name', 'gender', 'salary', 'birthday', 'tax']</msg>
<status status="PASS" starttime="20220310 17:24:22.546" endtime="20220310 17:24:22.547"/>
</kw>
<msg timestamp="20220310 17:24:22.547" level="INFO">${actual_csv_header} = ['natid', 'name', 'gender', 'salary', 'birthday', 'tax']</msg>
<status status="PASS" starttime="20220310 17:24:22.540" endtime="20220310 17:24:22.547"/>
</kw>
<kw name="Verify the CSV headers" library="keywords">
<arg>${actual_csv_header}</arg>
<doc>Verify if the CSV header is as expected and matchs the requirement</doc>
<kw name="Create List" library="BuiltIn">
<var>${expected_csv_header}</var>
<arg>natid</arg>
<arg>name</arg>
<arg>gender</arg>
<arg>salary</arg>
<arg>birthday</arg>
<arg>tax</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220310 17:24:22.548" level="INFO">${expected_csv_header} = ['natid', 'name', 'gender', 'salary', 'birthday', 'tax']</msg>
<status status="PASS" starttime="20220310 17:24:22.547" endtime="20220310 17:24:22.548"/>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<arg>${actual_csv_header}</arg>
<arg>${expected_csv_header}</arg>
<doc>Fails if given lists are unequal.</doc>
<status status="PASS" starttime="20220310 17:24:22.548" endtime="20220310 17:24:22.548"/>
</kw>
<status status="PASS" starttime="20220310 17:24:22.547" endtime="20220310 17:24:22.548"/>
</kw>
<doc>First row of the csv file must be
natid, name, gender, salary, birthday, tax</doc>
<tag>Functional Test</tag>
<status status="PASS" starttime="20220310 17:24:22.537" endtime="20220310 17:24:22.549"/>
</test>
<test id="s1-s3-t2" name="AC2:Verify the CVS consists of relevant details">
<kw name="Read CSV File" library="keywords">
<var>@{read_csv}</var>
<doc>Takes input CSV file and reads the contents into a list
Returns the CSV data in the form of list for further computation</doc>
<kw name="Get File" library="OperatingSystem">
<var>${csv}</var>
<arg>${INPUT_FILES_PATH}/Input_Data.csv</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220310 17:24:22.550" level="INFO" html="true">Getting file '&lt;a href="file:///Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/inputs/Input_Data.csv"&gt;/Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/inputs/Input_Data.csv&lt;/a&gt;'.</msg>
<msg timestamp="20220310 17:24:22.551" level="INFO">${csv} = natid,name,gender,salary,birthday,tax
S1325702H,Sumanth,M,10000,05101985,900
</msg>
<status status="PASS" starttime="20220310 17:24:22.550" endtime="20220310 17:24:22.551"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{read}</var>
<arg>${csv}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220310 17:24:22.551" level="INFO">@{read} = [ natid,name,gender,salary,birthday,tax
S1325702H,Sumanth,M,10000,05101985,900
 ]</msg>
<status status="PASS" starttime="20220310 17:24:22.551" endtime="20220310 17:24:22.551"/>
</kw>
<msg timestamp="20220310 17:24:22.552" level="INFO">@{read_csv} = [ natid,name,gender,salary,birthday,tax
S1325702H,Sumanth,M,10000,05101985,900
 ]</msg>
<status status="PASS" starttime="20220310 17:24:22.550" endtime="20220310 17:24:22.552"/>
</kw>
<doc>Subsequent rows of csv are the relevant details
of each working class hero</doc>
<tag>Functional Test</tag>
<status status="PASS" starttime="20220310 17:24:22.549" endtime="20220310 17:24:22.552"/>
</test>
<test id="s1-s3-t3" name="AC3:Verify upload of CSV is working in portal">
<kw name="Open Browser To launch app" library="keywords">
<doc>Create a webdriver
Then navigate to the application URL
Verify if the title matches the desired login page title</doc>
<kw name="Log" library="BuiltIn">
<arg>${EXECUTABLE_PATH}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220310 17:24:22.554" level="INFO">webDrivers/chromedriver</msg>
<status status="PASS" starttime="20220310 17:24:22.554" endtime="20220310 17:24:22.555"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>${BROWSER}</arg>
<arg>executable_path=${EXECUTABLE_PATH}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20220310 17:24:22.555" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20220310 17:24:22.555" endtime="20220310 17:24:24.356"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20220310 17:24:24.357" level="INFO">Opening url 'http://localhost:8080'</msg>
<status status="PASS" starttime="20220310 17:24:24.357" endtime="20220310 17:24:25.355"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>${LOGIN_PAGE_TITLE}</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20220310 17:24:25.394" level="INFO">Page title is 'Technical Challenge for CDS'.</msg>
<status status="PASS" starttime="20220310 17:24:25.355" endtime="20220310 17:24:25.394"/>
</kw>
<status status="PASS" starttime="20220310 17:24:22.554" endtime="20220310 17:24:25.394"/>
</kw>
<kw name="Check if upload CSV button placeholder is present" library="keywords">
<doc>This is used to check if the placeholder to upload CSV is present on the portal</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${UPLOAD_CSV_LOCATOR}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220310 17:24:25.406" level="INFO">Current page contains element '//label[contains(text(),'Choose file')]'.</msg>
<status status="PASS" starttime="20220310 17:24:25.395" endtime="20220310 17:24:25.406"/>
</kw>
<status status="PASS" starttime="20220310 17:24:25.394" endtime="20220310 17:24:25.406"/>
</kw>
<kw name="Verify uploading a CSV to portal" library="keywords">
<doc>Verify uploading CSV is successful</doc>
<kw name="Normalize Path" library="OperatingSystem">
<var>${NORMAL_PATH_UPLOAD_FILE_NAME}</var>
<arg>${INPUT_FILES_PATH}/Input_Data.csv</arg>
<doc>Normalizes the given path.</doc>
<msg timestamp="20220310 17:24:25.407" level="INFO">${NORMAL_PATH_UPLOAD_FILE_NAME} = /Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/inputs/Input_Data.csv</msg>
<status status="PASS" starttime="20220310 17:24:25.406" endtime="20220310 17:24:25.407"/>
</kw>
<kw name="Choose File" library="SeleniumLibrary">
<arg>${UPLOAD_CSV_CLICKABLE}</arg>
<arg>${NORMAL_PATH_UPLOAD_FILE_NAME}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<msg timestamp="20220310 17:24:25.407" level="INFO">Sending /Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/inputs/Input_Data.csv to browser.</msg>
<status status="PASS" starttime="20220310 17:24:25.407" endtime="20220310 17:24:25.477"/>
</kw>
<status status="PASS" starttime="20220310 17:24:25.406" endtime="20220310 17:24:25.477"/>
</kw>
<kw name="Close Browser session" library="keywords">
<doc>Used to close the browser</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220310 17:24:25.478" endtime="20220310 17:24:25.624"/>
</kw>
<status status="PASS" starttime="20220310 17:24:25.478" endtime="20220310 17:24:25.624"/>
</kw>
<doc>A simple button that allows me to upload a
file on my pc to the portal</doc>
<tag>Functional Test</tag>
<status status="PASS" starttime="20220310 17:24:22.553" endtime="20220310 17:24:25.625"/>
</test>
<kw name="Close Browser session" library="keywords" type="TEARDOWN">
<doc>Used to close the browser</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220310 17:24:25.627" endtime="20220310 17:24:25.627"/>
</kw>
<status status="PASS" starttime="20220310 17:24:25.626" endtime="20220310 17:24:25.627"/>
</kw>
<doc>As the Clerk, I should be able to upload a csv file to a portal
so that I can populate the database from a UI

Keywords are imported from the resource file</doc>
<status status="PASS" starttime="20220310 17:24:19.879" endtime="20220310 17:24:25.627"/>
</suite>
<suite id="s1-s4" name="userStory4" source="/Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/tests/userStory4.robot">
<kw name="Open Browser To launch app" library="keywords" type="SETUP">
<doc>Create a webdriver
Then navigate to the application URL
Verify if the title matches the desired login page title</doc>
<kw name="Log" library="BuiltIn">
<arg>${EXECUTABLE_PATH}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220310 17:24:25.637" level="INFO">webDrivers/chromedriver</msg>
<status status="PASS" starttime="20220310 17:24:25.637" endtime="20220310 17:24:25.637"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>${BROWSER}</arg>
<arg>executable_path=${EXECUTABLE_PATH}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20220310 17:24:25.637" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20220310 17:24:25.637" endtime="20220310 17:24:27.457"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20220310 17:24:27.458" level="INFO">Opening url 'http://localhost:8080'</msg>
<status status="PASS" starttime="20220310 17:24:27.458" endtime="20220310 17:24:28.439"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>${LOGIN_PAGE_TITLE}</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20220310 17:24:28.444" level="INFO">Page title is 'Technical Challenge for CDS'.</msg>
<status status="PASS" starttime="20220310 17:24:28.439" endtime="20220310 17:24:28.444"/>
</kw>
<status status="PASS" starttime="20220310 17:24:25.636" endtime="20220310 17:24:28.444"/>
</kw>
<test id="s1-s4-t1" name="AC1:Verify taxRelief endpoint return a list consist of natid, tax relief amount and name">
<kw name="Retrieve list of Tax Relief amount details via API" library="keywords">
<doc>It is used to execute a endpoint API
and return a list consist of natid, tax relief amount and name
Verify the status code returned</doc>
<kw name="Convert String to JSON" library="keywords">
<var>${headers}</var>
<arg>${HEADERS}</arg>
<doc>This keyword is used to convert any string to JSON</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${headers}</var>
<arg>json.loads("""${object}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220310 17:24:28.446" level="INFO">${headers} = {'Content-Type': 'application/json', 'accept': '*/*'}</msg>
<status status="PASS" starttime="20220310 17:24:28.446" endtime="20220310 17:24:28.446"/>
</kw>
<msg timestamp="20220310 17:24:28.447" level="INFO">${headers} = {'Content-Type': 'application/json', 'accept': '*/*'}</msg>
<status status="PASS" starttime="20220310 17:24:28.445" endtime="20220310 17:24:28.447"/>
</kw>
<kw name="Get Request" library="RestAPIs">
<var>${response}</var>
<var>${status}</var>
<arg>${BASE_URL}/calculator/taxRelief</arg>
<doc>This is a common function to
retrieve data any API using GET method</doc>
<msg timestamp="20220310 17:24:28.457" level="INFO">${response} = [{"natid":"S132$$$$$","name":"Madhu","relief":"7020.00"},{"natid":"S132$$$$$","name":"Shashank","relief":"7400.00"},{"natid":"S132$$$$$","name":"Sumanth","relief":"4625.00"},{"natid":"S132$$$$$","name...</msg>
<msg timestamp="20220310 17:24:28.458" level="INFO">${status} = 200</msg>
<status status="PASS" starttime="20220310 17:24:28.447" endtime="20220310 17:24:28.458"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>200</arg>
<arg>${status}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220310 17:24:28.458" endtime="20220310 17:24:28.459"/>
</kw>
<status status="PASS" starttime="20220310 17:24:28.445" endtime="20220310 17:24:28.459"/>
</kw>
<doc>A GET endpoint which returns a list consist of natid, tax relief amount and name</doc>
<tag>Functional Test</tag>
<status status="PASS" starttime="20220310 17:24:28.444" endtime="20220310 17:24:28.460"/>
</test>
<test id="s1-s4-t2" name="AC2:Verify natid is masked from 5th character onwards">
<kw name="Retrieve list of Tax Relief amount details via API" library="keywords">
<var>${response}</var>
<doc>It is used to execute a endpoint API
and return a list consist of natid, tax relief amount and name
Verify the status code returned</doc>
<kw name="Convert String to JSON" library="keywords">
<var>${headers}</var>
<arg>${HEADERS}</arg>
<doc>This keyword is used to convert any string to JSON</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${headers}</var>
<arg>json.loads("""${object}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220310 17:24:28.463" level="INFO">${headers} = {'Content-Type': 'application/json', 'accept': '*/*'}</msg>
<status status="PASS" starttime="20220310 17:24:28.462" endtime="20220310 17:24:28.463"/>
</kw>
<msg timestamp="20220310 17:24:28.463" level="INFO">${headers} = {'Content-Type': 'application/json', 'accept': '*/*'}</msg>
<status status="PASS" starttime="20220310 17:24:28.462" endtime="20220310 17:24:28.463"/>
</kw>
<kw name="Get Request" library="RestAPIs">
<var>${response}</var>
<var>${status}</var>
<arg>${BASE_URL}/calculator/taxRelief</arg>
<doc>This is a common function to
retrieve data any API using GET method</doc>
<msg timestamp="20220310 17:24:28.472" level="INFO">${response} = [{"natid":"S132$$$$$","name":"Madhu","relief":"7020.00"},{"natid":"S132$$$$$","name":"Shashank","relief":"7400.00"},{"natid":"S132$$$$$","name":"Sumanth","relief":"4625.00"},{"natid":"S132$$$$$","name...</msg>
<msg timestamp="20220310 17:24:28.472" level="INFO">${status} = 200</msg>
<status status="PASS" starttime="20220310 17:24:28.463" endtime="20220310 17:24:28.472"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>200</arg>
<arg>${status}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220310 17:24:28.472" endtime="20220310 17:24:28.473"/>
</kw>
<msg timestamp="20220310 17:24:28.473" level="INFO">${response} = [{"natid":"S132$$$$$","name":"Madhu","relief":"7020.00"},{"natid":"S132$$$$$","name":"Shashank","relief":"7400.00"},{"natid":"S132$$$$$","name":"Sumanth","relief":"4625.00"},{"natid":"S132$$$$$","name...</msg>
<status status="PASS" starttime="20220310 17:24:28.461" endtime="20220310 17:24:28.473"/>
</kw>
<kw name="Verify natid Masking" library="keywords">
<var>${value}</var>
<arg>${response}</arg>
<doc>Calls a custom library to verify if the natid is masked from 5th character onwards</doc>
<kw name="Verify Natid Masking" library="PatternMatching">
<var>${value}</var>
<arg>${response}</arg>
<arg>${PATTERN_TO_MATCH}</arg>
<doc>Function to read the response obtained by GET API method
and parse through to check if the natid is masked from 5th character onwards</doc>
<msg timestamp="20220310 17:24:28.474" level="INFO">['$$$$$']
Masking successful for hero: Madhu with natid: S132$$$$$
['$$$$$']
Masking successful for hero: Shashank with natid: S132$$$$$
['$$$$$']
Masking successful for hero: Sumanth with natid: S132$$$$$
['$$$$$']
Masking successful for hero: Madhu with natid: S132$$$$$
['$$$$$']
Masking successful for hero: Shashank with natid: S132$$$$$
['$$$$$']
Masking successful for hero: Sumanth with natid: S132$$$$$
['$$$$$']
Masking successful for hero: Sumanth with natid: S132$$$$$</msg>
<msg timestamp="20220310 17:24:28.474" level="INFO">${value} = ['$$$$$']</msg>
<status status="PASS" starttime="20220310 17:24:28.474" endtime="20220310 17:24:28.474"/>
</kw>
<msg timestamp="20220310 17:24:28.474" level="INFO">${value} = None</msg>
<status status="PASS" starttime="20220310 17:24:28.473" endtime="20220310 17:24:28.474"/>
</kw>
<doc>natid field must be masked from the 5th character onwards with dollar sign ‘$’</doc>
<tag>Functional Test</tag>
<status status="PASS" starttime="20220310 17:24:28.460" endtime="20220310 17:24:28.475"/>
</test>
<kw name="Close Browser session" library="keywords" type="TEARDOWN">
<doc>Used to close the browser</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220310 17:24:28.475" endtime="20220310 17:24:28.546"/>
</kw>
<status status="PASS" starttime="20220310 17:24:28.475" endtime="20220310 17:24:28.547"/>
</kw>
<doc>As the Bookkeeper, I should be able to query the amount of tax
relief for each person in the database so that I can report the
figures to my Bookkeeping Manager.

Keywords are imported from the resource file</doc>
<status status="PASS" starttime="20220310 17:24:25.628" endtime="20220310 17:24:28.547"/>
</suite>
<suite id="s1-s5" name="userStory5" source="/Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/tests/userStory5.robot">
<kw name="Open Browser To launch app" library="keywords" type="SETUP">
<doc>Create a webdriver
Then navigate to the application URL
Verify if the title matches the desired login page title</doc>
<kw name="Log" library="BuiltIn">
<arg>${EXECUTABLE_PATH}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220310 17:24:28.558" level="INFO">webDrivers/chromedriver</msg>
<status status="PASS" starttime="20220310 17:24:28.558" endtime="20220310 17:24:28.558"/>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<arg>${BROWSER}</arg>
<arg>executable_path=${EXECUTABLE_PATH}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<msg timestamp="20220310 17:24:28.559" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" starttime="20220310 17:24:28.559" endtime="20220310 17:24:30.338"/>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<arg>${BASE_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20220310 17:24:30.339" level="INFO">Opening url 'http://localhost:8080'</msg>
<status status="PASS" starttime="20220310 17:24:30.338" endtime="20220310 17:24:31.149"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>${LOGIN_PAGE_TITLE}</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20220310 17:24:31.155" level="INFO">Page title is 'Technical Challenge for CDS'.</msg>
<status status="PASS" starttime="20220310 17:24:31.149" endtime="20220310 17:24:31.155"/>
</kw>
<status status="PASS" starttime="20220310 17:24:28.558" endtime="20220310 17:24:31.156"/>
</kw>
<test id="s1-s5-t1" name="AC1:Validate a red color button exists">
<kw name="Validate a button exists with red color" library="keywords">
<doc>Check if a red color button is present on the portal</doc>
<kw name="Page Should Contain Button" library="SeleniumLibrary">
<arg>${BUTTON_CSS_LOCATOR}</arg>
<doc>Verifies button ``locator`` is found from current page.</doc>
<msg timestamp="20220310 17:24:31.188" level="INFO">Current page contains button 'css:.btn-danger'.</msg>
<status status="PASS" starttime="20220310 17:24:31.157" endtime="20220310 17:24:31.188"/>
</kw>
<kw name="Get WebElement" library="SeleniumLibrary">
<var>${bg}</var>
<arg>${BUTTON_CSS_LOCATOR}</arg>
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<msg timestamp="20220310 17:24:31.193" level="INFO">${bg} = &lt;selenium.webdriver.remote.webelement.WebElement (session="80105e066d232f2a13888e06fba5b2b5", element="9c3c0191-f026-476d-a479-02de58ba903b")&gt;</msg>
<status status="PASS" starttime="20220310 17:24:31.188" endtime="20220310 17:24:31.193"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<var>${bg_color}</var>
<arg>${bg}</arg>
<arg>value_of_css_property</arg>
<arg>background-color</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<msg timestamp="20220310 17:24:31.200" level="INFO">${bg_color} = rgba(220, 53, 69, 1)</msg>
<status status="PASS" starttime="20220310 17:24:31.193" endtime="20220310 17:24:31.200"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${BUTTON_COLOR}</arg>
<arg>${bg_color}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20220310 17:24:31.200" endtime="20220310 17:24:31.200"/>
</kw>
<status status="PASS" starttime="20220310 17:24:31.156" endtime="20220310 17:24:31.201"/>
</kw>
<doc>The button on the screen must be red-colored</doc>
<tag>Functional Test</tag>
<status status="PASS" starttime="20220310 17:24:31.156" endtime="20220310 17:24:31.201"/>
</test>
<test id="s1-s5-t2" name="AC2:Validate the red button text">
<kw name="Validate the button text" library="keywords">
<doc>Verify the button text</doc>
<kw name="Element Text Should Be" library="SeleniumLibrary">
<arg>${BUTTON_LOCATOR}</arg>
<arg>${BUTTON_NAME}</arg>
<arg>ignore_case: bool = True</arg>
<doc>Verifies that element ``locator`` contains exact the text ``expected``.</doc>
<msg timestamp="20220310 17:24:31.203" level="INFO">Verifying element 'xpath=//*[@id="contents"]/a[2]' contains exact text 'Dispense Now'.</msg>
<status status="PASS" starttime="20220310 17:24:31.202" endtime="20220310 17:24:31.219"/>
</kw>
<status status="PASS" starttime="20220310 17:24:31.202" endtime="20220310 17:24:31.220"/>
</kw>
<doc>The text on the button must be exactly “Dispense Now”</doc>
<tag>Functional Test</tag>
<status status="PASS" starttime="20220310 17:24:31.201" endtime="20220310 17:24:31.220"/>
</test>
<test id="s1-s5-t3" name="AC3:Verify on button click the page opens new page with text &quot;Cash dispensed&quot;">
<kw name="Verify on button click a new page opens and validate the text" library="keywords">
<doc>Checks on clicking the Dispense button, it opens a new page
Validate the text present on new page</doc>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${BUTTON_LOCATOR}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220310 17:24:31.221" level="INFO">Clicking element 'xpath=//*[@id="contents"]/a[2]'.</msg>
<status status="PASS" starttime="20220310 17:24:31.221" endtime="20220310 17:24:31.479"/>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<arg>${DISPENSE_PAGE}</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<msg timestamp="20220310 17:24:31.483" level="INFO">Page title is 'Dispense!!'.</msg>
<status status="PASS" starttime="20220310 17:24:31.479" endtime="20220310 17:24:31.483"/>
</kw>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${DISPENSE_PAGE_TEXT}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220310 17:24:31.494" level="INFO">Current page contains text 'Cash dispensed'.</msg>
<status status="PASS" starttime="20220310 17:24:31.483" endtime="20220310 17:24:31.494"/>
</kw>
<status status="PASS" starttime="20220310 17:24:31.221" endtime="20220310 17:24:31.494"/>
</kw>
<doc>After clicking on the button, it should direct me to a page with a text that says “Cash dispensed”</doc>
<tag>Functional Test</tag>
<status status="PASS" starttime="20220310 17:24:31.220" endtime="20220310 17:24:31.494"/>
</test>
<kw name="Close Browser session" library="keywords" type="TEARDOWN">
<doc>Used to close the browser</doc>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220310 17:24:31.495" endtime="20220310 17:24:31.567"/>
</kw>
<status status="PASS" starttime="20220310 17:24:31.495" endtime="20220310 17:24:31.567"/>
</kw>
<doc>As the Governor, I should be able to see a button on the screen so that I can dispense tax relief for my working class heroes.

Keywords are imported from the resource file</doc>
<status status="PASS" starttime="20220310 17:24:28.548" endtime="20220310 17:24:31.567"/>
</suite>
<status status="PASS" starttime="20220310 17:24:16.869" endtime="20220310 17:24:31.569"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="10" fail="0" skip="0">Functional Test</stat>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="Oppenheimer_Project_SummaryReport">Oppenheimer_Project_SummaryReport</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="userStory1">Oppenheimer_Project_SummaryReport.userStory1</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="userStory2">Oppenheimer_Project_SummaryReport.userStory2</stat>
<stat pass="3" fail="0" skip="0" id="s1-s3" name="userStory3">Oppenheimer_Project_SummaryReport.userStory3</stat>
<stat pass="2" fail="0" skip="0" id="s1-s4" name="userStory4">Oppenheimer_Project_SummaryReport.userStory4</stat>
<stat pass="3" fail="0" skip="0" id="s1-s5" name="userStory5">Oppenheimer_Project_SummaryReport.userStory5</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
