<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.3 (Python 3.9.10 on darwin)" generated="20220310 16:51:07.044" rpa="false" schemaversion="2">
<suite id="s1" name="UserStory2" source="/Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/tests/userStory2.robot">
<test id="s1-t1" name="AC1:Validate inserting multiple records via API">
<kw name="Insert multiple working class hero records via API" library="keywords">
<doc>Calls the function to read JSON file and returns request body
Execute the POST request to insert multiple records
Verify the status code returned</doc>
<kw name="Read JSON File and return request body" library="keywords">
<var>${req_body}</var>
<arg>${INPUT_FILES_PATH}/userStory2.json</arg>
<doc>Takes a file as input
Read the file content and converts to JSON</doc>
<kw name="Get File" library="OperatingSystem">
<var>${json}</var>
<arg>${INPUT_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220310 16:51:07.255" level="INFO" html="true">Getting file '&lt;a href="file:///Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/inputs/userStory2.json"&gt;/Users/sumanth/Downloads/GovTech_Assignment/oppenheimer-project-dev/Oppenheimer_Project/inputs/userStory2.json&lt;/a&gt;'.</msg>
<msg timestamp="20220310 16:51:07.257" level="INFO">${json} = [
    {
      "birthday": "06041994",
      "gender": "M",
      "name": "Shashank",
      "natid": "S1325801H",
      "salary": "10000",
      "tax": "750"
    },
    {
        "birthday": "05101985"...</msg>
<status status="PASS" starttime="20220310 16:51:07.255" endtime="20220310 16:51:07.257"/>
</kw>
<kw name="Convert String to JSON" library="keywords">
<var>${req_body}</var>
<arg>${json}</arg>
<doc>This keyword is used to convert any string to JSON</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${headers}</var>
<arg>json.loads("""${object}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220310 16:51:07.258" level="INFO">${headers} = [{'birthday': '06041994', 'gender': 'M', 'name': 'Shashank', 'natid': 'S1325801H', 'salary': '10000', 'tax': '750'}, {'birthday': '05101985', 'gender': 'M', 'name': 'Sumanth', 'natid': 'S1325701H', 's...</msg>
<status status="PASS" starttime="20220310 16:51:07.258" endtime="20220310 16:51:07.258"/>
</kw>
<msg timestamp="20220310 16:51:07.259" level="INFO">${req_body} = [{'birthday': '06041994', 'gender': 'M', 'name': 'Shashank', 'natid': 'S1325801H', 'salary': '10000', 'tax': '750'}, {'birthday': '05101985', 'gender': 'M', 'name': 'Sumanth', 'natid': 'S1325701H', 's...</msg>
<status status="PASS" starttime="20220310 16:51:07.257" endtime="20220310 16:51:07.259"/>
</kw>
<msg timestamp="20220310 16:51:07.259" level="INFO">${req_body} = [{'birthday': '06041994', 'gender': 'M', 'name': 'Shashank', 'natid': 'S1325801H', 'salary': '10000', 'tax': '750'}, {'birthday': '05101985', 'gender': 'M', 'name': 'Sumanth', 'natid': 'S1325701H', 's...</msg>
<status status="PASS" starttime="20220310 16:51:07.254" endtime="20220310 16:51:07.259"/>
</kw>
<kw name="Convert String to JSON" library="keywords">
<var>${headers}</var>
<arg>${headers}</arg>
<doc>This keyword is used to convert any string to JSON</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${headers}</var>
<arg>json.loads("""${object}""")</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220310 16:51:07.259" level="INFO">${headers} = {'Content-Type': 'application/json', 'accept': '*/*'}</msg>
<status status="PASS" starttime="20220310 16:51:07.259" endtime="20220310 16:51:07.259"/>
</kw>
<msg timestamp="20220310 16:51:07.260" level="INFO">${headers} = {'Content-Type': 'application/json', 'accept': '*/*'}</msg>
<status status="PASS" starttime="20220310 16:51:07.259" endtime="20220310 16:51:07.260"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${BASE_URL}/calculator/insertMultiple</arg>
<arg>json=${req_body}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=202</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220310 16:51:07.281" level="INFO">POST Request : url=http://localhost:8080/calculator/insertMultiple 
 path_url=/calculator/insertMultiple 
 headers={'User-Agent': 'python-requests/2.27.1', 'Accept-Encoding': 'gzip, deflate', 'accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '231'} 
 body=b'[{"birthday": "06041994", "gender": "M", "name": "Shashank", "natid": "S1325801H", "salary": "10000", "tax": "750"}, {"birthday": "05101985", "gender": "M", "name": "Sumanth", "natid": "S1325701H", "salary": "10000", "tax": "750"}]' 
 </msg>
<msg timestamp="20220310 16:51:07.281" level="INFO">POST Response : url=http://localhost:8080/calculator/insertMultiple 
 status=202, reason= 
 headers={'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '7', 'Date': 'Thu, 10 Mar 2022 08:51:07 GMT'} 
 body=Alright 
 </msg>
<msg timestamp="20220310 16:51:07.281" level="INFO">${response} = &lt;Response [202]&gt;</msg>
<status status="PASS" starttime="20220310 16:51:07.260" endtime="20220310 16:51:07.281"/>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>202</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" starttime="20220310 16:51:07.281" endtime="20220310 16:51:07.282"/>
</kw>
<status status="PASS" starttime="20220310 16:51:07.253" endtime="20220310 16:51:07.282"/>
</kw>
<doc>Enhancement of test case (1), with the ability to insert a list</doc>
<tag>Functional Test</tag>
<status status="PASS" starttime="20220310 16:51:07.253" endtime="20220310 16:51:07.282"/>
</test>
<doc>As the Clerk, I should be able to insert more than one working class hero into database via an API.

Keywords are imported from the resource file</doc>
<status status="PASS" starttime="20220310 16:51:07.045" endtime="20220310 16:51:07.283"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Functional Test</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="UserStory2">UserStory2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
